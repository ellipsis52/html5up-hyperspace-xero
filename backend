const express = require('express');
const session = require('express-session');
const passport = require('passport');
const Auth0Strategy = require('passport-auth0');
const axios = require('axios');

const app = express();

// Configure Passport with Auth0 strategy
passport.use(new Auth0Strategy({
    domain: process.env.AUTH0_DOMAIN,
    clientID: process.env.AUTH0_CLIENT_ID,
    clientSecret: process.env.AUTH0_CLIENT_SECRET,
    callbackURL: 'http://localhost:3000/callback', // URL de redirection après authentification
}, function (accessToken, refreshToken, extraParams, profile, done) {
    return done(null, {
        profile,
        accessToken
    });
}));

// Sérialisation et désérialisation de l'utilisateur dans la session
passport.serializeUser(function (user, done) {
    done(null, user);
});

passport.deserializeUser(function (user, done) {
    done(null, user);
});

// Configuration de la session
app.use(session({
    secret: 'mysecret',
    resave: false,
    saveUninitialized: true
}));

app.use(passport.initialize());
app.use(passport.session());

// Route de login avec Auth0
app.get('/login', passport.authenticate('auth0', {
    scope: 'openid profile email'
}));

// Callback après authentification
app.get('/callback', passport.authenticate('auth0', {
    failureRedirect: '/'
}), function (req, res) {
    res.redirect('/dashboard');
});

// Protéger les routes avec Auth0
function ensureAuthenticated(req, res, next) {
    if (req.isAuthenticated()) {
        return next();
    }
    res.redirect('/login');
}

// Dashboard accessible uniquement aux utilisateurs authentifiés
app.get('/dashboard', ensureAuthenticated, (req, res) => {
    res.json({
        message: 'Welcome to your dashboard!',
        user: req.user
    });
});

app.listen(3000, () => {
    console.log('Server running on http://localhost:3000');
});